{"version":3,"sources":["webpack:///./src/components/TItleAndDescription.js","webpack:///./src/components/Header.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TitleAndDescription","_ref","data","title","site","siteMetadata","description","react_default","a","createElement","Header","gatsby_browser_entry","query","render","TItleAndDescription","_3501179355","__webpack_require__","d","__webpack_exports__","Layout","edges","allMarkdownRemark","className","styles","components_Header","map","edge","idx","frontmatter","node","key","path","to","m","module","exports","require","default","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"uIAceA,EAZa,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KACtBC,EAAQD,EAAKE,KAAKC,aAAaF,MAC/BG,EAAcJ,EAAKE,KAAKC,aAAaC,YAE3C,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAAA,SAAIH,KCkBKI,EArBA,WACb,OAEEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,MAAK,aAULC,OAAQ,SAAAX,GAAI,OACVK,EAAAC,EAAAC,cAACK,EAAD,CAAqBZ,KAAMA,KAZ/BA,KAAAa,uBCTJC,EAAAC,EAAAC,EAAA,0BAAAN,IAQA,IA4BaA,EAAK,aAkBHO,UA9CA,SAAAlB,GAAY,IAGjBmB,EAHiBnB,EAAVC,KAGQmB,kBAAfD,MAER,OACEb,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAOJ,QACrBZ,EAAAC,EAAAC,cAACe,EAAD,MACCJ,EAAMK,IAAI,SAACC,EAAMC,GAAQ,IACjBC,EAAeF,EAAKG,KAApBD,YAEP,OACErB,EAAAC,EAAAC,cAAA,OAAKqB,IAAQF,EAAYG,KAAjB,IAAyBJ,GAC/BpB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMqB,GAAIJ,EAAYG,MACnBH,EAAYzB,UAOrBI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMqB,GAAI,SAAV,2CC9BR,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CjB,EAAAC,EAAAC,EAAA,sBAAAoB,IAAA,IAAAC,EAAAvB,EAAA,GAAAwB,EAAAxB,EAAAyB,EAAAF,GAAAG,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAAyB,EAAAC,GAAAE,EAAA5B,EAAA,IAAA6B,EAAA7B,EAAAyB,EAAAG,GAAA5B,EAAAC,EAAAC,EAAA,sBAAA2B,EAAArC,IAAAQ,EAAA,SAaM8B,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAAhC,EAAAC,cAACqC,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAM/C,MACLiD,EAAgBF,EAAMrC,QAAUuC,EAAgBF,EAAMrC,OAAOV,MAEtD+C,EAAMpC,QAAUoC,EAAMG,UAC5BH,EAAM/C,KAAO+C,EAAM/C,KAAKA,KAAOiD,EAAgBF,EAAMrC,OAAOV,MAGvDsC,EAAAhC,EAAAC,cAAA,uCA4Bf6B,EAAYe,UAAY,CACtBnD,KAAMoD,IAAUC,OAChB3C,MAAO0C,IAAUE,OAAOC,WACxB5C,OAAQyC,IAAUI,KAClBN,SAAUE,IAAUI,wGCpDhBC,EAAmB,SAAA1D,GAAkB,IAAf2D,EAAe3D,EAAf2D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEd,IAAMtC,cAAcwD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-pages-index-js-9367ddc8c756c22cdcfa.js","sourcesContent":["import React from \"react\";\n\nconst TitleAndDescription = ({data}) => {\n  const title = data.site.siteMetadata.title;\n  const description = data.site.siteMetadata.description;\n\n  return (\n    <header>\n      <h2>{title}</h2>\n      <p>{description}</p>\n    </header>\n  );\n}\n\nexport default TitleAndDescription;","import React from \"react\";\n// graphql\nimport { StaticQuery, graphql } from 'gatsby'\n// components \nimport TitleAndDescription from './TItleAndDescription';\n\nconst Header = () => {\n  return (\n    // use Graphql query  \n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n        }\n      `}\n      render={data => (\n        <TitleAndDescription data={data} />\n      )}\n    />\n  )\n}\n\nexport default Header;","import React from \"react\";\n// graphql\nimport { graphql, Link } from 'gatsby';\n// Components\nimport Header from '../components/Header';\n// Styles\nimport styles from './index.module.scss';\n\nconst Layout = ({data}) => {\n  // get metadata from project structure\n  // / edges are the pages in the pages directory\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <div className={styles.Layout}>\n      <Header />\n      {edges.map((edge, idx) => {\n        const {frontmatter} = edge.node;\n      \n        return (\n          <div key={`${frontmatter.path}-${idx}`}>\n            <Link to={frontmatter.path}>\n              {frontmatter.title}\n            </Link>\n          </div>\n        )\n      })}\n\n      {/* All tags */}\n      <div>\n        <Link to={'/tags'}>Browse all tags</Link>\n      </div>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query HomepageQuery {\n      allMarkdownRemark(\n        sort: {order: DESC, fields: [frontmatter___date]}\n      ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            exerpt\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}